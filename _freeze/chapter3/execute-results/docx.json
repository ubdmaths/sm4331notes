{
  "hash": "0831a9de55934826d914b5d64cfccc64",
  "result": {
    "engine": "knitr",
    "markdown": "\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n# Sampling from the normal distribution\n\n## An example\n\n::: {#exm-circuitboard}\nConsider the time to failure (in years) for circuit boards modelled by $\\Exp(\\lambda)$.\nAn independent random sample $X_1,\\dots,X_n$ was collected.\nWhat is the probability that the minimum time lasted is more than 2 years?\n\\begin{align*}\n\\Pr(\\min\\{X_1,\\dots,X_n\\} > 2)\n&=\\Pr(X_1 > 2, \\dots, X_n > 2) \\\\\n&=\\Pr(X_1>2)\\cdots\\Pr(X_n>2)\\\\\n&= \\left[\\Pr(X_1 > 2)\\right]^n \\\\\n&= [e^{-2/\\lambda}]^n \\\\\n&= e^{-2n/\\lambda}\n\\end{align*}\n:::\n\n\nA reasonable estimator for $1/\\lambda$ is $T_n=\\min\\{X_1,\\dots,X_n\\}$.\n\n\n## Finite vs inifinite population\n\n[Infinite population]{.ul}\n\nImplicitly iid: \"Removing\" $X_1=x_1$ from the population does not affect the probability distribution for the subsequent samples. \nWhy \"infinite\"? In scenarios where the exact population size is either unknown, uncountable, or effectively limitless, it is simpler to treat it as infinite.\n\n[Finite population]{.ul}\n\nNot necessarily iid, depending on the sampling method:\n\n- Sampling without replacement\n- Cluster sampling\n- Stratified sampling\n- etc.\n\nStandard errors calculations are affected here.\nCheck out [Finite Population Correction factors](https://en.wikipedia.org/wiki/Standard_error#Finite_population_correction_(FPC)) if interested.\n\n\n::: {#exm-infinitesampling}\nEstimate the average height of goalkeepers.\nWhich ones? Presumably all of them--past, present, and future--in all leagues.\nFor all intents and purposes, this is an infinite population.\n:::\n\n\n## An experiment\n\nUsing `R`, we can draw multiple instances of the statistic $T_n$.\nLet $n=25$ and $p=0.6$ (true value).\n\n1. Draw $X_1,\\dots,X_n\\iid \\Bern(p)$\n2. Compute $T_n = \\sum_{i=1}^n X_i$\n3. Repeat steps 1--2 a total of $B=10000$ times\n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn <- 25\np <- 0.6\nB <- 10000\nx <- rbinom(B, n, p)\n\n# First 10 values\nhead(x, 10)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] 13 22 17 10 14 18 16 13 14 17\n```\n\n\n:::\n\n```{.r .cell-code}\nggplot() +\n  geom_histogram(aes(x), fill = \"gray30\", col = \"white\", \n                 breaks = seq(-0.5, n + 0.5, by = 1)) +\n  scale_x_continuous(breaks = seq(0, n, by = 5)) +\n  labs(x = expression(T[n]), y = \"Frequency\") \n```\n\n::: {.cell-output-display}\n![](chapter3_files/figure-docx/unnamed-chunk-3-1.png)\n:::\n:::\n",
    "supporting": [
      "chapter3_files/figure-docx"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}